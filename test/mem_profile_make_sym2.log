

Filename: C:\Users\lhv\VSCode\COMP599\Assignment1\A1.py

--> Try using sparse.maximum()

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    87     84.3 MiB     84.3 MiB           1   @profile
    88                                         def make_symmetric2(graph):
    89    346.9 MiB    262.6 MiB           1       A = graph.toarray()
    90   4911.3 MiB   4564.4 MiB           1       A = np.maximum(A, A.transpose())
    91   5116.1 MiB    204.8 MiB           1       return sparse.csr_matrix(A)     


A nnz: 113706
A shape: (36595, 36595)
Time to load the graph: 84.64736461639404 s
Filename: C:\Users\lhv\VSCode\COMP599\Assignment1\A1.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    93     81.1 MiB     81.1 MiB           1   @profile
    94                                         def load_matrix(filename="./data/metabolic.edgelist.txt"):
    95     81.1 MiB      0.0 MiB           1       t1 = time.time()
    96     84.0 MiB      2.9 MiB           1       edgelist = np.loadtxt(filename, dtype=np.int32)
    97
    98                                             # edgelist = remove_self_edges(edgelist)
    99                                             # edgelist = make_symmetric(edgelist)
   100
   101                                             # Create the graph in CSC form
   102     84.0 MiB      0.0 MiB           1       rows = edgelist[:,0]
   103     84.0 MiB      0.0 MiB           1       cols = edgelist[:,1]
   104     84.0 MiB      0.0 MiB           1       data = np.ones(len(edgelist))
   105
   106     84.0 MiB      0.0 MiB           1       n = np.amax(edgelist) + 1
   107     84.3 MiB      0.4 MiB           1       graph = sparse.coo_matrix((data ,(rows, cols)), shape=(n, n), dtype=np.int32)
   108                                             # graph = graph.tocsr()
   109
   110                                             # TODO: Complexity?
   111                                             # A = graph + graph.T
   112
   113      8.1 MiB    -76.3 MiB           1       A = make_symmetric2(graph)
   114
   115
   116      8.1 MiB      0.0 MiB           1       print(f"A nnz: {A.nnz}")
   117      8.1 MiB      0.0 MiB           1       print(f"A shape: {A.shape}")
   118
   119      8.1 MiB      0.0 MiB           1       t2 = time.time()
   120      8.2 MiB      0.0 MiB           1       print(f"Time to load the graph: {t2-t1} s")
   121
   122                                             # sanity_check(A)
   123
   124      8.2 MiB      0.0 MiB           1       return A


Total running time: 84.66537022590637 s




Filename: C:\Users\lhv\VSCode\COMP599\Assignment1\A1.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   304     81.1 MiB     81.1 MiB           1   @profile
   305                                         def main():
   306     81.1 MiB      0.0 MiB           1       t1 = time.time()
   307
   308     81.1 MiB      0.0 MiB           1       print("\n\n")
   309
   310
   311      8.3 MiB    -72.8 MiB           1       A = load_matrix("./data/phonecalls.edgelist.txt")
   312                                             # A = load_matrix("./data/internet.edgelist.txt")
   313                                             # A = load_matrix("./data/test.txt")
   314                                             # print(A.todense())
   315
   316                                             # plot_degree_distrib(A)
   317                                             # cc, d, avg_cc = get_clustering_coefs(A, avg=True)
   318
   319                                             # b_plot_clustering_coef_distrib(A)
   320
   321                                             # g_plot_clustering_degree_rel(A)
   322
   323      8.3 MiB      0.0 MiB           1       t2 = time.time()
   324      8.3 MiB      0.0 MiB           1       print(f"Total running time: {t2-t1} s")
   325
   326
   327      8.3 MiB      0.0 MiB           1       print("\n\n\n")







   Trying to use it on internet:


   Traceback (most recent call last):
  File "C:\Users\lhv\VSCode\COMP599\Assignment1\A1.py", line 317, in <module>
    main()
  File "C:\Users\lhv\VSCode\COMP599\Assignment1\A1.py", line 298, in main
    A = load_matrix("./data/internet.edgelist.txt")
  File "C:\Users\lhv\VSCode\COMP599\Assignment1\A1.py", line 101, in load_matrix
    A = make_symmetric2(graph)
  File "C:\Users\lhv\VSCode\COMP599\Assignment1\A1.py", line 77, in make_symmetric2
    A = graph.toarray()
  File "C:\Users\lhv\VSCode\COMP599\Assignment1\.venv\lib\site-packages\scipy\sparse\compressed.py", line 1031, in toarray
    out = self._process_toarray_args(order, out)
  File "C:\Users\lhv\VSCode\COMP599\Assignment1\.venv\lib\site-packages\scipy\sparse\base.py", line 1202, in _process_toarray_args
    return np.zeros(self.shape, dtype=self.dtype, order=order)
numpy.core._exceptions.MemoryError: Unable to allocate 138. GiB for an array with shape (192244, 192244) and data type int32